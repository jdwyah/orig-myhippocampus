#-----------------------------------------------------------------------
# MANIFEST and JAR properties - Make sure you change these to your settings.
#-----------------------------------------------------------------------

name		   =HippoTest
			#used as the jar file name(ie. ${name}.jar)
			#used as zip file name(ie. ${name}-version.jar)
			#used as the directory staging name
			#version info may be retrieved using java -jar ${name}.jar -version

webapp.enabled     =true
            #if set to true, will build a war file with all jar files in input/libinclude
            #and will also contain all files from input/webroot
            #and will also contain all the classes from input/javasrc
imports            =[bundle.emptystring]
exports            =[bundle.emptystring]
impl.pattern       =biz/**,com/**,net/**
			#The packages to make private

build.source=5

copyright	   = Copyright &#169; 2000 Dean Hiller All Rights Reserved.
javadoc.title  = Build Template
javadoc.bottom	   = If you would like a shared copyright, contact me at deanhiller@users.sourceforge.net<br> \
        <a href=http://sourceforge.net> \
        <IMG src=http://sourceforge.net/sflogo.php?group_id=113040 width=210 height=62 border=0 alt=SourceForge Logo> \
        </a>
generated       =output

manifest        =${generated}/manifest
		#will contain a generated manifest

build           =bin
#{generated}/classes
		#will contain all the *.class files after compile
		#will contain all the *.jpg        files from ${properties}
		#will contain all the *.properties files from ${properties}
		#will contain all the *.gif        files from ${properties}
		#will contain all the *.html       files from ${properties}
		#will contain all the *.*          files from ${properties}
		#will NOT contain *.html, *.htm, *.jpg, *.gif from ${javacode}

jardist         =${generated}/jardist
		#will contain a   *.jar containing everything in ${build}
wardist         =${generated}/wardist
		#will contain a   *.war containing everything in ${build} and ${webroot}
		
dist            =${generated}/dist


#-----------------------------------------------------------------------
# INPUT DIRECTORIES - don't change these after the project is started.
#-----------------------------------------------------------------------
input		=.
		#contains all stuff that is an input into the build

config		=bldfiles
		#contains build.xml for the module, and any other build scripts
		#plus build property files

javacode        =${input}/src
		#Contains all *.java source files
		#Contains all *.properties files that will go into the jar
		#Contains all *.xml files that will go into the jar
		#Contains all *.* that will go into the jar except doc_*.gif and doc_*.jpg
		#Contains all *.html files needed by javadoc
		#Contains all doc_*.jpg  files needed by javadoc
		#Contains all doc_*.gif  files needed by javadoc
		#Contains all *.*    files needed by javadoc

classes         =${input}/bin
gwt.out         =${input}/www
gwt.module      =com.aavu.HippoTest
		

webroot         =${input}/tomcat/webapps/HippoTest
        #Contains all html, jsp, gif, jpg's, WEB-INF/web.xml, WEB-INF/faces-config.xml, etc. etc
        
lib             =${input}/lib
		#contains all *.jar needed to run the app and that need to be deployed with the app
		#does not contain *.jars needed to compile the app(such as junit.jar)
libexclude      =${input}/libexclude
        #contains all the *.jar that are not needed to run the app.  They are for testing or
		#would already be deployed as services in the framework as in the case of an osgi logging
		#service for example
