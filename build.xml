<?xml version="1.0"?>
<!--
	Run "ant -projecthelp" to view all the possible targets and descriptions.
-->
<project name="HippoTest" basedir=".">
	
	<property file="build.properties" />
	
	
		<path id="lib.include">
			<fileset dir="${lib}">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<!-- all Third Party jars and tool jars this module needs to compile -->
		<path id="lib.jars">
			<path refid="lib.include" />
			<fileset dir="${libexclude}">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<!-- must keep junit jars separate for ease of creating classpath in manifest -->
		<path id="tool.and.lib">
			<path refid="lib.jars" />
			
		</path>

		<path id="gwt">
			<fileset dir="tools/gwt">
				<include name="**/*.jar" />
			</fileset>
		</path>

		<path id="classes.classpath">
			<pathelement location="${build}" />
		</path>		
	
	
	
	
	<target name="compile" >
		<mkdir dir="${build}" />

		<pathconvert property="compile.classpath" pathsep=";">
			<path refid="tool.and.lib" />
		</pathconvert>

		<echo message="Compiling files in ${javacode}" />
		<echo message="Putting the class files in ${build}" />
		<echo message="classpath=${compile.classpath}" />

		<!-- Compile the java code from ${javacode} into ${build} -->
		<javac srcdir="${javacode}" destdir="${build}" deprecation="yes" debug="on">
			<classpath>
				<path refid="tool.and.lib" />
				<path refid="gwt" />
			</classpath>
		</javac>
		
		<pathconvert property="gwt.classpath" pathsep=";">
				<path refid="gwt" />
			</pathconvert>
		<echo message="gwt classpath=${gwt.classpath}"/>
		
		<!-- compile java to javascript here -->
		<java maxmemory="512M" failonerror="true" classname="com.google.gwt.dev.GWTCompiler" fork="true">
			<classpath>
				<pathelement path="${javacode}" />
				<path refid="tool.and.lib" />
				<path refid="gwt" />
			</classpath>
			<arg value="-out" />
			<arg value="${gwt.out}" />
			<arg value="-style"/> 
			<arg value="pretty"/>
			<arg value="${gwt.module}" />
		</java>	

	</target>
	
	
	<target name="copyForJar" depends="compile">
			<echo message="webapp.enabled=${webapp.enabled}" />

			<property name="run.war.target" value="true" />
			
			<!-- Also, copy over all needed jars from ${lib} to ${jardist} -->
			<!--		<copy todir="${jardist}">
						<fileset dir="${lib}" includes="**" />
					</copy>
	-->
		</target>
		<!-- 
	***********************************************************************
	              JAR TARGET
	***********************************************************************
	-->
		<target name="jar" depends="copyForJar" description="Builds a jar file">
			<!-- Create the distribution directory -->
			<mkdir dir="${jardist}" />		
			
			<!-- Put all implementation classes from ${build} into the jar file -->
			<jar jarfile="${jardist}/${jar.name}" basedir="${build}" />

		</target>

		<!-- 
	***********************************************************************
	              WAR TARGET
	***********************************************************************
	-->
		<target name="war" depends="jar" if="run.war.target" description="Builds a war file">
			<mkdir dir="${wardist}" />
<!--			<war destfile="${wardist}/${name}.war" webxml="${webroot}/WEB-INF/web.xml" >-->
			<war destfile="${wardist}/${name}.war" webxml="${specialWebIncludes}/web.xml" >				
				<lib dir="${lib}">
					<include name="**/*.jar" />
				</lib>				
				
				<classes dir="${classes}" />
				<!-- <manifest context.xml??-->
				<fileset dir="${webroot}" />
				<fileset dir="${gwt.out}"/>
			</war>
		</target>
	
	
	

	<target name="tomcatTasks">
		<fail unless="tomcat.home" message="PLEASE make sure you have a ${user.home}/ant.properties file with the property tomcat.home set" />
		<fail unless="tomcat.username" message="PLEASE make sure you have a ${user.home}/ant.properties file with the property tomcat.username set" />
		<fail unless="tomcat.password" message="PLEASE make sure you have a ${user.home}/ant.properties file with the property tomcat.password set" />
		<fail unless="tomcat.url" message="PLEASE make sure you have a ${user.home}/ant.properties file with the property tomcat.url set" />

		<taskdef name="deploy"    classname="org.apache.catalina.ant.DeployTask"/>
		  <taskdef name="list"      classname="org.apache.catalina.ant.ListTask"/>
		  <taskdef name="reload"    classname="org.apache.catalina.ant.ReloadTask"/>
		  <taskdef name="resources" classname="org.apache.catalina.ant.ResourcesTask"/>
		  <taskdef name="roles"     classname="org.apache.catalina.ant.RolesTask"/>
		  <taskdef name="start"     classname="org.apache.catalina.ant.StartTask"/>
		  <taskdef name="stop"      classname="org.apache.catalina.ant.StopTask"/>
		  <taskdef name="undeploy"  classname="org.apache.catalina.ant.UndeployTask"/>
		
		<echo message="foo"></echo>
		<property name="tomcat.manager.url" value="${tomcat.url}/manager" />
		<path id="tomcat.classpath">
			<fileset dir="${tomcat.home}/server/lib/">
				<include name="catalina-ant.jar" />
			</fileset>
		</path>
		<!--Just a convenient pathconvert to debug paths above by converting to string and printing -->
		<pathconvert dirsep="/" pathsep=" " property="temp.tomcat" refid="tomcat.classpath" setonempty="true" />
		<echo message="tomcat ant task jars=${temp.tomcat}" />

<!--		<taskdef resource="org/apache/catalina/ant/antlib.xml" classpathref="tomcat.classpath" />-->
	</target>

	<target name="deploy" description="Install application in Tomcat" depends="tomcatTasks, war">
		<deploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/" war="${wardist}/${name}.war" />
	</target>

	<target name="undeploy" description="Remove application in Tomcat" depends="tomcatTasks">
		<undeploy url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/" />
	</target>

	<target name="redeploy" description="Reload application in Tomcat" depends="war, undeploy, deploy">
	</target>

	<target name="start" description="Start Tomcat application" depends="tomcatTasks">
		<start url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${name}" />
	</target>

	<target name="stop" description="Stop Tomcat application" depends="tomcatTasks">
		<stop url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${name}" />
	</target>

	<target name="tomcatInfo" description="List Tomcat applications" depends="tomcatTasks">
		<list url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" />
		<roles url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" />
		<resources url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" />
		<sessions url="${tomcat.manager.url}" username="${tomcat.username}" password="${tomcat.password}" path="/${name}" />
	</target>
</project>
